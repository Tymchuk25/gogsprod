name: CI process with deploy to cloud

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  lint:
    name: Linting source code Gogs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Download lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Linting
        run: golangci-lint run --verbose --timeout=5m ./...

  test:
    name: Testing source code Gogs
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run tests with coverage
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GIT_SONAR_TOKEN: ${{ secrets.GIT_SONAR_TOKEN }}
