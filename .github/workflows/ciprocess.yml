name: CI process with deploy to cloud
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
#  test:
#    name: Testing source code Gogs
#    runs-on: ubuntu-latest
#    needs: lint

#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2 # Одержуємо код з репозиторію

#    - name: Set up Go
#      uses: actions/setup-go@v5
#      with:
#        go-version: '1.23'

#    - name: Run tests
#      run: go test ./... # Запускаємо всі тести

#  lint:
#    name: Linting source code Gogs
#    runs-on: ubuntu-latest

#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2 # Одержуємо код з репозиторію

#    - name: Set up Go
#      uses: actions/setup-go@v5
#      with:
#        go-version: '1.23'

#    - name: Download lint
#      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

#    - name: Linting
#      run: golangci-lint run --verbose --timeout=5m ./...

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GIT_SONAR_TOKEN: ${{ secrets.GIT_SONAR_TOKEN }}

#  deployAWS:
#    name: Trigger AWS CodePipeline
#    runs-on: ubuntu-latest
#    needs: sonarcloud

#    steps:
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v2
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-central-1

#    - name: Trigger CodePipeline
#      run: aws codepipeline start-pipeline-execution --name gogs-pipeline
